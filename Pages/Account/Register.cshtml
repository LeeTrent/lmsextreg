@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h4>Create a new account.</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.Email"></label>:
                <input asp-for="Input.Email" class="form-control" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>:
                <input asp-for="Input.Password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>:
                <input asp-for="Input.ConfirmPassword" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.FirstName"></label>:
                <input asp-for="Input.FirstName" class="form-control" />
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.MiddleName"></label>:
                <input asp-for="Input.MiddleName" class="form-control" />
                <span asp-validation-for="Input.MiddleName" class="text-danger"></span>
            </div>  
            <div class="form-group">
                <label asp-for="Input.LastName"></label>:
                <input asp-for="Input.LastName" class="form-control" />
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>    
            <div class="form-group">
                <label asp-for="Input.JobTitle"></label>:
                <input asp-for="Input.JobTitle" class="form-control" />
                <span asp-validation-for="Input.JobTitle" class="text-danger"></span>
            </div>       
            <div class="form-group">
                <label asp-for="Input.AgencyID"></label>:
                <select id="AgencySelectObj" asp-for="Input.AgencyID" class="form-control"
                        asp-items="@Model.AgencySelectList">
                    <option value="">-- Select Agency --</option>
                </select>
                <span asp-validation-for="Input.AgencyID" class="text-danger"></span>
            </div>     
            <div class="form-group">
                <label asp-for="Input.SubAgencyID"></label>:
                <select id="SubAgencySelectObj" asp-for="Input.SubAgencyID" class="form-control"
                        asp-items="@Model.SubAgencySelectList">
                    <option value="">-- Select SubAgency --</option>
                </select>
                <span asp-validation-for="Input.SubAgencyID" class="text-danger"></span>
            </div>  
            <label>Rules of Behavior:</label>
            <p style="font-size:large;color:#1589FF;padding:10px;border: 1px solid #000;">
                Rules of Behavior text goes here ...
            </p>      
            <div class="form-group"> 
                <input asp-for="Input.RulesOfBehaviorAgreedTo" />
                <label asp-for="Input.RulesOfBehaviorAgreedTo"></label>
                <br/>
                <span asp-validation-for="Input.RulesOfBehaviorAgreedTo" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <!-- <script>
        $(document).ready(function() {
            $("#SubAgencySelectObj").prop("disabled", true);
        });    
    </script> -->
    <script>
        $(function() {
            $("#AgencySelectObj").change(function() {   
                var selectedAgencyVal = $("#AgencySelectObj").val();
                var subAgencySelectObj = $('#SubAgencySelectObj');
                subAgencySelectObj.empty();
                if (selectedAgencyVal != null && selectedAgencyVal != '') {
                     $.ajax({
                        type: 'GET',
                        url: '/Account/Register?handler=SubAgenciesInAgency',
                        contentType: "applications/json",
                        data: {
                            agyID: selectedAgencyVal
                        },
                        success: function(data) {
                            $("#SubAgencySelectObj").prop("disabled", false);
                            subAgencySelectObj.append('<option value="">' + '-- Select SubAgency --' + '</option>');
                            $.each(data, function(idx, subAgency) {
                                subAgencySelectObj.append('<option value="' + subAgency.value + '">' + subAgency.text + '</option>');
                            });
                        },
                        error: function(excErr) {
                            alert("error");
                            console.log("AJAX error retrieving sub-agencies: ");
                            console.log(excErr);
                            console.log("selectedAgencyVal: ")
                            console.log(selectedAgencyVal);
                        }
                    });
                }
            });
        });
    </script>
    <script>
        // extend range validator method to treat checkboxes differently
        var defaultRangeValidator = $.validator.methods.range;
        $.validator.methods.range = function(value, element, param) {
            if(element.type === 'checkbox') {
                // if it's a checkbox return true if it is checked
                return element.checked;
            } else {
                // otherwise run the default validation function
                return defaultRangeValidator.call(this, value, element, param);
            }
        }
    </script>
}
